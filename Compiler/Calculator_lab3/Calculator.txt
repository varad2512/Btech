Varad Kulkarni
CD LAB
Roll no 44
GrNo 131696
Scientific Calculator

Lex File

%option noyywrap
%{
#include <cstdlib>
#include <string>
#include "y.tab.h"
%}
%%
[_[:alpha:]][_[:alnum:]]*     yylval.s = new std::string(yytext);  return VAR;
[[:digit:]]+                  yylval.i = strtol(yytext, NULL, 10); return INT;
[-+*/%=^:,]                   return *yytext;
.|\n                          ; /* ignore all the rest */
%%


Yacc file:
%{
#include <iostream>
#include <string>
#include <map>
static std::map<std::string, int> vars;
%}
 
%union { int i; std::string *s; }
 
%token BATATA
%token<i> INT
%token<s> VAR
%type<i> expr
 
%right '='
%left '+' '-'
%left '*' '/' '%'
%right BATATA
 
%%
 
list: stmt
    | list stmt
    ;
 
stmt: expr ','
    | expr ':'          { std::cout << $1 << std::endl; }
    ;
 
expr: INT               { $$ = $1; }
    | VAR               { $$ = vars[*$1];      delete $1; }
    | VAR '=' expr      { $$ = vars[*$1] = $3; delete $1; }
    | expr '+' expr     { $$ = $1 + $3; }
    | expr '-' expr     { $$ = $1 - $3; }
    | expr '*' expr     { $$ = $1 * $3; }
    | expr '/' expr     { $$ = $1 / $3; }
    | expr '%' expr     { $$ = $1 % $3; }
    | '+' expr  %prec BATATA    { $$ =  $2; }
    | '-' expr  %prec BATATA    { $$ = -$2; }
    | '(' expr ')'              { $$ =  $2; }
    ;
 
%%
extern int yylex();
extern int yyparse();
void yyerror(char *s) { std::cout << s << std::endl; }
int main() { yyparse(); }

Input:
5+7
